"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const css_numeric_value_1 = require("./css-numeric-value");
const dom_matrix_1 = require("./dom-matrix");
const css_1 = require("./css");
class CSSScale {
    get is2D() {
        return this.z.value === 1;
    }
    toMatrix() {
        const x = this.x.value;
        const y = this.y.value;
        const z = this.z.value;
        return new dom_matrix_1.DOMMatrix().scaleNonUniformSelf(x, y, z);
    }
    constructor(x, y, z) {
        this.x = css_numeric_value_1.CSSNumericValue.rectifyNumberishValue(x);
        this.y = css_numeric_value_1.CSSNumericValue.rectifyNumberishValue(y);
        if (z)
            this.z = css_numeric_value_1.CSSNumericValue.rectifyNumberishValue(z);
        else
            this.z = css_1.CSS.number(1);
        if (![this.x, this.y, this.z].every(v => v.unit.baseType === css_1.CSSBaseType.number)) {
            throw new TypeError(`Failed to construct CSSRotate: x, y, z must be of type <number>`);
        }
    }
    toString() {
        let components = [this.x, this.y];
        if (!this.z.equals(css_1.CSS.number(1)))
            components.push(this.z);
        return `scale(${components.join(', ')})`;
    }
}
exports.CSSScale = CSSScale;
//# sourceMappingURL=css-scale.js.map