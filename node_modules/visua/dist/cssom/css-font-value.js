"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const css_style_value_1 = require("./css-style-value");
const css_keyword_value_1 = require("./css-keyword-value");
class CSSFontValue extends css_style_value_1.CSSStyleValue {
    constructor(components) {
        super();
        this.sizeKeywords = [
            'xx-small',
            'x-small',
            'small',
            'medium',
            'large',
            'x-large',
            'xx-large',
        ];
        let normalKeyword = new css_keyword_value_1.CSSKeywordValue('normal');
        this.style = components.style || normalKeyword;
        this.variant = components.variant || normalKeyword;
        this.weight = components.weight || normalKeyword;
        this.stretch = components.stretch || normalKeyword;
        this.size = components.size || new css_keyword_value_1.CSSKeywordValue('medium');
        this.lineHeight = components.lineHeight || normalKeyword;
        this.family = components.family;
    }
    toString() {
        return `${this.style} ${this.variant} ${this.weight} ${this.stretch} ${this.size}/${this.lineHeight} ${this.family}`;
    }
}
CSSFontValue.styleKeywords = ['italic'];
CSSFontValue.variantKeywords = ['small-caps'];
CSSFontValue.weightKeywords = ['bold', 'bolder', 'lighter'];
CSSFontValue.stretchKeywords = [
    'ultra-condensed',
    'extra-condensed',
    'condensed',
    'semi-condensed',
    'semi-expanded',
    'expanded',
    'extra-expanded',
    'ultra-expanded'
];
exports.CSSFontValue = CSSFontValue;
class CSSSystemFontValue extends css_style_value_1.CSSStyleValue {
    constructor(font) {
        super();
        this.font = font;
    }
    toString() {
        return this.font;
    }
}
CSSSystemFontValue.systemFonts = [
    'caption',
    'icon',
    'menu',
    'message-box',
    'small-caption',
    'status-bar',
];
exports.CSSSystemFontValue = CSSSystemFontValue;
//# sourceMappingURL=css-font-value.js.map