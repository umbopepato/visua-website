import { CSSStyleValue } from './css-style-value';
import { CSSUnitValue } from './css-unit-value';
import { CSSKeywordValue } from './css-keyword-value';
import { CSSFontFamilyValue } from './css-font-family-value';
export interface CSSFontComponents {
    style?: CSSUnitValue | CSSKeywordValue;
    variant?: CSSKeywordValue;
    weight?: CSSUnitValue | CSSKeywordValue;
    stretch?: CSSKeywordValue;
    size?: CSSUnitValue | CSSKeywordValue;
    lineHeight?: CSSUnitValue | CSSKeywordValue;
    family: CSSFontFamilyValue;
}
export declare class CSSFontValue extends CSSStyleValue {
    style: CSSUnitValue | CSSKeywordValue;
    static styleKeywords: string[];
    variant: CSSKeywordValue;
    static variantKeywords: string[];
    weight: CSSUnitValue | CSSKeywordValue;
    static weightKeywords: string[];
    stretch: CSSKeywordValue;
    static stretchKeywords: string[];
    size: CSSUnitValue | CSSKeywordValue;
    sizeKeywords: string[];
    lineHeight: CSSUnitValue | CSSKeywordValue;
    family: CSSFontFamilyValue;
    constructor(components: CSSFontComponents);
    toString(): string;
}
export declare class CSSSystemFontValue extends CSSStyleValue {
    font: string;
    static systemFonts: string[];
    constructor(font: string);
    toString(): string;
}
