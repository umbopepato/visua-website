import { CSSStyleValue } from './css-style-value';
export interface StyleMapEntry {
    name: string;
    value: CSSStyleValue;
}
/**
 * The style map containing all the css variables defined in the parsed identity css files
 */
export declare class StyleMap {
    private map;
    /**
     * Gets the CSSStyleValue given the corresponding property name
     *
     * @param property The name of the property (prepending `--` is not necessary but allowed)
     * @returns The corresponding style value
     */
    get(property: string): CSSStyleValue;
    /**
     * Gets the CSSStyleValues corresponding to the given array of property names
     *
     * @param properties The array of property names
     * @returns The Object of found properties (the names are converted from hyphen-case to camel-case to allow for destructuring declarations)
     */
    getAll(properties: string[]): {
        [key: string]: CSSStyleValue;
    };
    /**
     * Gets the CSSStyleValues of the properties matching the given regex
     *
     * @param property A regular expression to ls against property names
     * @returns An array of StyleMapEntries
     */
    getSimilar(property: RegExp): StyleMapEntry[];
    /**
     * Sets (or overwrites) a property in the style map
     *
     * @param property The name of the property
     * @param value The value of the property
     */
    set(property: string, value: CSSStyleValue): void;
    /**
     * Runs a callbackFn on each of the properties contained in the style map
     *
     * @param callbackFn The callback to run against each property
     */
    forEach(callbackFn: (property: string, value: CSSStyleValue) => void): void;
    /**
     * Prints the StyleMap in a table
     */
    print(): void;
}
