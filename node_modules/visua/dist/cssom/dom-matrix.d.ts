export declare class DOMMatrixReadOnly {
    readonly b: number;
    readonly a: number;
    readonly c: number;
    readonly d: number;
    readonly e: number;
    readonly f: number;
    readonly m11: number;
    readonly m12: number;
    readonly m13: number;
    readonly m14: number;
    readonly m21: number;
    readonly m22: number;
    readonly m23: number;
    readonly m24: number;
    readonly m31: number;
    readonly m32: number;
    readonly m33: number;
    readonly m34: number;
    readonly m41: number;
    readonly m42: number;
    readonly m43: number;
    readonly m44: number;
    is2D: boolean;
    readonly isIdentity: boolean;
    constructor(sequence: number[]);
    translate(tx: number, ty: number, tz?: number): DOMMatrix;
    scale(scale: number, originX?: number, originY?: number): DOMMatrix;
    scale3d(scale: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;
    scaleNonUniform(scaleX: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;
    rotate(angle: number, originX?: number, originY?: number): DOMMatrix;
    rotateFromVector(x: number, y: number): DOMMatrix;
    rotateAxisAngle(x: number, y: number, z: number, angle: number): DOMMatrix;
    skewX(sx: number): DOMMatrix;
    skewY(sy: number): DOMMatrix;
    multiply(other: DOMMatrix): DOMMatrix;
    flipX(): DOMMatrix;
    flipY(): DOMMatrix;
    toArray(): number[];
}
export declare class DOMMatrix extends DOMMatrixReadOnly {
    b: number;
    a: number;
    c: number;
    d: number;
    e: number;
    f: number;
    m11: number;
    m12: number;
    m13: number;
    m14: number;
    m21: number;
    m22: number;
    m23: number;
    m24: number;
    m31: number;
    m32: number;
    m33: number;
    m34: number;
    m41: number;
    m42: number;
    m43: number;
    m44: number;
    constructor(arg?: number[] | DOMMatrixReadOnly);
    multiplySelf(other: DOMMatrix): DOMMatrix;
    preMultiplySelf(other: DOMMatrix): DOMMatrix;
    translateSelf(tx: number, ty: number, tz?: number): DOMMatrix;
    scaleSelf(scale: number, originX?: number, originY?: number): DOMMatrix;
    scale3dSelf(scale: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;
    scaleNonUniformSelf(scaleX: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;
    rotateSelf(angle: number, originX?: number, originY?: number): DOMMatrix;
    rotateFromVectorSelf(x: number, y: number): DOMMatrix;
    rotateAxisAngleSelf(x: number, y: number, z: number, angle: number): DOMMatrix;
    skewXSelf(sx: number): DOMMatrix;
    skewYSelf(sy: number): DOMMatrix;
}
